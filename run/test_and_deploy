#!/usr/bin/bash

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# exit script on first error
set -e

# create a file for build log
BUILD_LOG='/opt/kancl.online-build-logs/0000.log'
NUMBER=0
NUMBER_STRING="0000"
while [ -e "$BUILD_LOG" ]; do
    printf -v BUILD_LOG '/opt/kancl.online-build-logs/%04d.log' "$(( ++NUMBER ))"
    printf -v NUMBER_STRING '%04d' "$(( NUMBER ))"
done
touch "$BUILD_LOG"

echo -e ""
echo -e "${GREEN}Track this build in: https://${DOMAIN}/build-logs/${NUMBER_STRING}.log${NC}"

function onError()
{
  echo -e
  echo -e "${RED}Failed{NC}"
  echo -e "Last 20 lines from the log: "
  echo -e ""
  tail -20 "$BUILD_LOG"
  echo -e ""
}
trap onError ERR

echo -e "${GREEN}Running tests${NC}"
{
  echo "Running tests"
  echo "-------------"
  echo ""
  (export HTTP_PORT=8080; export HTTPS_PORT=8081; export DOMAIN=''; docker-compose -f docker-compose.yml -f docker-compose.test.yml -p test up --build --exit-code-from cypress)
} >> "$BUILD_LOG" 2>&1


echo -e "${GREEN}Deploying${NC}"
{
  echo ""
  echo "Deploying"
  echo "-------------"
  echo ""
  mkdir -p /opt/kancl.online
  rm -rf /opt/kancl.online
  mkdir -p /opt/kancl.online
  cd ..
  cp -R . /opt/kancl.online/
  cd /opt/kancl.online/run

  docker stop $(docker ps -q) | echo ""
  docker-compose -f docker-compose.yml -f db-docker-compose.yml up --build --detach
  docker container prune -f

  echo ""
  echo "Success"
  echo ""
} >> "$BUILD_LOG" 2>&1

# remove color codes
cat "${BUILD_LOG}" | sed -e 's/\x1b\[[0-9;]*m//g' > "${BUILD_LOG}.2"
rm "${BUILD_LOG}"
mv "${BUILD_LOG}.2" "$BUILD_LOG"

echo -e "${GREEN}Success${NC}"
echo -e ""

cd nonexist
